/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_javnce_vnc_server_platform_Win32GdiFramebuffer */

#ifndef _Included_org_javnce_vnc_server_platform_Win32GdiFramebuffer
#define _Included_org_javnce_vnc_server_platform_Win32GdiFramebuffer
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_javnce_vnc_server_platform_Win32GdiFramebuffer
 * Method:    takeScreenShotJni
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_javnce_vnc_server_platform_Win32GdiFramebuffer_takeScreenShotJni
  (JNIEnv *, jclass);

/*
 * Class:     org_javnce_vnc_server_platform_Win32GdiFramebuffer
 * Method:    sizeJni
 * Signature: ()Lorg/javnce/rfb/types/Size;
 */
JNIEXPORT jobject JNICALL Java_org_javnce_vnc_server_platform_Win32GdiFramebuffer_sizeJni
  (JNIEnv *, jclass);

/*
 * Class:     org_javnce_vnc_server_platform_Win32GdiFramebuffer
 * Method:    formatJni
 * Signature: ()Lorg/javnce/rfb/types/PixelFormat;
 */
JNIEXPORT jobject JNICALL Java_org_javnce_vnc_server_platform_Win32GdiFramebuffer_formatJni
  (JNIEnv *, jclass);

/*
 * Class:     org_javnce_vnc_server_platform_Win32GdiFramebuffer
 * Method:    bufferJni
 * Signature: (IIII)[Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobjectArray JNICALL Java_org_javnce_vnc_server_platform_Win32GdiFramebuffer_bufferJni
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     org_javnce_vnc_server_platform_Win32GdiFramebuffer
 * Method:    isSupportedJni
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_javnce_vnc_server_platform_Win32GdiFramebuffer_isSupportedJni
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class org_javnce_vnc_server_platform_Win32GdiFramebuffer_Grabber */

#ifndef _Included_org_javnce_vnc_server_platform_Win32GdiFramebuffer_Grabber
#define _Included_org_javnce_vnc_server_platform_Win32GdiFramebuffer_Grabber
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
